<?php
/**
 * @file
 * Install, update and uninstall functions for the yubikey module.
 */

/**
 * Implementation of hook_install().
 */
function yubikey_install() {
  // Create table.
  drupal_install_schema('yubikey');
}

/**
 * Implementation of hook_uninstall().
 */
function yubikey_uninstall() {
  // Remove settings variables.
  variable_del('yubikey_enabled');
  variable_del('yubikey_authscheme');
  variable_del('yubikey_optional');
  variable_del('yubikey_optional_if_lost');
  variable_del('yubikey_valserver');
  variable_del('yubikey_valserver_urls_type');
  variable_del('yubikey_valserver_urls_1');
  variable_del('yubikey_valserver_urls_2');
  variable_del('yubikey_valserver_urls_3');
  variable_del('yubikey_valserver_urls_4');
  variable_del('yubikey_valserver_urls_5');
  variable_del('yubikey_valserver_urls');
  variable_del('yubikey_valserver_api_key');
  variable_del('yubikey_valserver_api_id');
  variable_del('yubikey_valserver_api_https');
  variable_del('yubikey_valserver_api_timeout');
  variable_del('yubikey_mail_yubikey_lost_subject');
  variable_del('yubikey_mail_yubikey_lost_body');
  variable_del('yubikey_mail_yubikey_lost_confirmed_recipients');
  variable_del('yubikey_mail_yubikey_lost_confirmed_subject');
  variable_del('yubikey_mail_yubikey_lost_confirmed_body');
  
  // remove lines from authmap
  db_query("DELETE FROM {authmap} WHERE module = 'yubikey'");

  // Drop table.
  drupal_uninstall_schema('yubikey');
}

/**
 * Implementation of hook_schema().
 */
function yubikey_schema() {
  $schema['yubikey_blocked'] = array(
    'description' => 'Stores blocked YubiKey information.',
    'fields' => array(
      'aid' => array(
        'type' => 'int',
        'length' => 11,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'Primary Key: Association ID of the YubiKey.',
      ),
      'uid' => array(
        'type' => 'int',
        'length' => 11,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The user ID.',
      ),
      'status' => array(
        'type' => 'int',
        'size' => 'tiny',
        'length' => 4,
	'not null' => TRUE,
        'default' => 0,
        'description' => 'The status of the YubiKey.',
      ),
      'created' => array(
        'type' => 'int',
        'length' => 11,
        'not null' => TRUE,
        'default' => 0,
        'description' => 'The timestamp for when the YubiKey was blocked.',
      ),
    ),
    'primary key' => array('aid'),
  );

  return $schema;
}

/**
 * Implementation of hook_requirements().
 *
 * Check that the cURL extension exists for PHP.
 */
function yubikey_requirements($phase) {
  $requirements = array();
  $t = get_t();

  $has_curl = function_exists('curl_init');

  if (!$has_curl) {
    $requirements['curl'] = array(
      'title'        => $t('cURL library'),
      'value'        => $t('Not Installed'),
      'description'  => $t('PHP <a href="@curl_url">cURL</a> library required by YubiKey module is not available.', array('@curl_url' => 'http://php.net/manual/en/curl.setup.php')),
      'severity'     => REQUIREMENT_ERROR,
    );
  }

  return $requirements;
}

/**
 * Implementation of hook_update()
 * 
 * Update from 1x to 2x
 * install new db schema
 * move variables to 2x names
 */
function yubikey_update_6200() {
  variable_set('yubikey_enabled', variable_get('yubikey_enabled', FALSE));
  if (variable_get('yubikey_apiurl', 'https://api.yubico.com/wsapi/verify') == 'https://api.yubico.com/wsapi/verify') {
    $yk_valserver_urls_type = 'online';
    $yk_valserver_urls_1 = '';
    $yk_valserver_urls = '';
  }
  else {
    $yk_valserver_urls_type = 'custom';
    $yk_valserver_urls_1 = variable_get('yubikey_apiurl', 'https://api.yubico.com/wsapi/verify');
    $yk_valserver_urls = variable_get('yubikey_apiurl', 'https://api.yubico.com/wsapi/verify');
  }
  variable_set('yubikey_valserver_urls_type', $yk_valserver_urls_type);
  variable_set('yubikey_valserver_urls_1', $yk_valserver_urls_1);
  variable_set('yubikey_valserver_urls_2', '');
  variable_set('yubikey_valserver_urls_3', '');
  variable_set('yubikey_valserver_urls_4', '');
  variable_set('yubikey_valserver_urls_5', '');
  variable_set('yubikey_valserver_urls', $yk_valserver_urls);
  variable_set('yubikey_valserver_api_key', variable_get('yubikey_apikey', NULL));
  variable_set('yubikey_valserver_api_id', variable_get('yubikey_apiid', NULL));
  variable_set('yubikey_valserver_api_https', variable_get('yubikey_tolerance', 150));
  variable_set('yubikey_valserver_api_timeout', variable_get('yubikey_timeout', 10));

  variable_del('yubikey_apiurl');
  variable_del('yubikey_apikey');
  variable_del('yubikey_apiid');
  variable_del('yubikey_tolerance');
  variable_del('yubikey_timeout'); 

  drupal_install_schema('yubikey');
}
